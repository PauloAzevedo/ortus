/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.ortus.gui;

import br.com.ortus.beans.Estoque;
import br.com.ortus.configuracaoPersistencia.TransactionManager;
import br.com.ortus.daosSistema.EstoqueDao;
import javax.swing.JOptionPane;

/**
 *
 * @author Paulo
 */
public class JDialogEstoqueProduto extends javax.swing.JDialog {

    /**
     * Creates new form JDialogEstoqueProduto
     */
    Estoque estoque;
    
    public JDialogEstoqueProduto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        estoque = new EstoqueDao().obterLista().get(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jSpinnerQtde = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1Equipamento = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButtonSalvar = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Estoque de Produtos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );

        jLabel2.setText("Quantidade");

        jComboBox1Equipamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Biojato", "BioscalerCB", "BioscalerSB", "Soni I", "Soni II", "Led Lux I", "Led Lux II", "Kit Led Lux", "Kit Ortusonic", "Kit Jato" }));

        jLabel3.setText("Equipamento");

        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ortus/icones/save2.png"))); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ortus/icones/close.png"))); // NOI18N
        jButtonFechar.setText("Fechar");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jButtonSalvar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonFechar))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jSpinnerQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox1Equipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1Equipamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonFechar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        salvarNovo();
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonFecharActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogEstoqueProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogEstoqueProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogEstoqueProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogEstoqueProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDialogEstoqueProduto dialog = new JDialogEstoqueProduto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox jComboBox1Equipamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSpinner jSpinnerQtde;
    // End of variables declaration//GEN-END:variables

    private void salvar() {
        int valor = (Integer)jSpinnerQtde.getValue();
        String equipamento = jComboBox1Equipamento.getSelectedItem().toString();
        
        if(equipamento.equals("Biojato")){
            estoque.setBiojato(estoque.getBiojato()+valor);
        } else if(equipamento.equals("BioscalerCB")){
            estoque.setBioscalerCB(estoque.getBioscalerCB()+valor);
        }else if(equipamento.equals("BioscalerSB")){
            estoque.setBioscalerSB(estoque.getBioscalerSB()+valor);
        }else if(equipamento.equals("Soni I")){
            estoque.setSoniI(estoque.getSoniI()+valor);
        }else if(equipamento.equals("Soni II")){
            estoque.setSoniII(estoque.getSoniII()+valor);
        }else if(equipamento.equals("Led Lux I")){
            estoque.setLedLuxI(estoque.getLedLuxI()+valor);
        }else if(equipamento.equals("Led Lux II")){
            estoque.setLedLuxII(estoque.getLedLuxII()+valor);
        }else if(equipamento.equals("Kit Led Lux")){
            estoque.setKitLedLux(estoque.getKitLedLux()+valor);
        }else if(equipamento.equals("Kit Ortusonic")){
            estoque.setKitOrtusonic(estoque.getKitOrtusonic()+valor);
        }else if(equipamento.equals("Kit Jato")){
            estoque.setKitJato(estoque.getKitJato()+valor);
        }else {
            JOptionPane.showMessageDialog(null, "Escolha um equipamento!");
            return;
        }
        
        TransactionManager.beginTransaction();
        try {
            EstoqueDao eDao = new EstoqueDao();

            eDao.persistir(estoque);

            TransactionManager.commit();

            JOptionPane.showMessageDialog(null, "Estoque foi atualizado!");
            novo();
        } catch (Exception e) {
            TransactionManager.rollback();
            JOptionPane.showMessageDialog(null, "Estoque não pode ser atualizado!" + e);
        }
    }
    
    private void salvarNovo() {
        int valor = (Integer)jSpinnerQtde.getValue();
        String equipamento = jComboBox1Equipamento.getSelectedItem().toString();
        
        if(equipamento.equals("Biojato")){
            estoque.setBiojato(valor);
        } else if(equipamento.equals("BioscalerCB")){
            estoque.setBioscalerCB(valor);
        }else if(equipamento.equals("BioscalerSB")){
            estoque.setBioscalerSB(valor);
        }else if(equipamento.equals("Soni I")){
            estoque.setSoniI(valor);
        }else if(equipamento.equals("Soni II")){
            estoque.setSoniII(valor);
        }else if(equipamento.equals("Led Lux I")){
            estoque.setLedLuxI(valor);
        }else if(equipamento.equals("Led Lux II")){
            estoque.setLedLuxII(valor);
        }else if(equipamento.equals("Kit Led Lux")){
            estoque.setKitLedLux(valor);
        }else if(equipamento.equals("Kit Ortusonic")){
            estoque.setKitOrtusonic(valor);
        }else if(equipamento.equals("Kit Jato")){
            estoque.setKitJato(valor);
        }else {
            JOptionPane.showMessageDialog(null, "Escolha um equipamento!");
            return;
        }
        
        TransactionManager.beginTransaction();
        try {
            EstoqueDao eDao = new EstoqueDao();

            eDao.persistir(estoque);

            TransactionManager.commit();

            JOptionPane.showMessageDialog(null, "Estoque foi atualizado!");
            novo();
        } catch (Exception e) {
            TransactionManager.rollback();
            JOptionPane.showMessageDialog(null, "Estoque não pode ser atualizado!" + e);
        }
    }

    private void novo() {
        jSpinnerQtde.setValue(0);
        jComboBox1Equipamento.setSelectedIndex(0);
    }

}

