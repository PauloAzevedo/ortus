/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialogPesquisaAssitencia.java
 *
 * Created on 23/01/2012, 22:16:15
 */
package br.com.ortus.gui;

import br.com.ortus.beans.Assistencia;
import br.com.ortus.daosSistema.AssistenciaDao;
import br.com.ortus.utilidades.HashSistema;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Usuario
 */
public class JDialogPesquisaAssitencia extends javax.swing.JDialog {

    private List<Assistencia> assistencias;
    private String filtro;
    private boolean filtroDois;

    /**
     * Creates new form JDialogPesquisaAssitencia
     */
    public JDialogPesquisaAssitencia(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        popularTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAssitencias = new javax.swing.JTable();
        jComboBoxFiltro = new javax.swing.JComboBox();
        jTextFieldFiltro = new javax.swing.JTextField();
        jButtonFiltro = new javax.swing.JButton();
        jTextFieldResultado = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Assistência Técnica Ortus - Pesquisa de Assistência");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 645, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, -1, -1));

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pesquisa Assistência Técnica");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(jLabel1)
                .addContainerGap(193, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, -1));

        jTableAssitencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableAssitencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAssitenciasMouseClicked(evt);
            }
        });
        jTableAssitencias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableAssitenciasKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAssitencias);

        jComboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Cliente", "Nº Série" }));

        jButtonFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ortus/icones/pesquisarpequeno.png"))); // NOI18N
        jButtonFiltro.setText("Filtrar");
        jButtonFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltroActionPerformed(evt);
            }
        });

        jTextFieldResultado.setEditable(false);

        jLabel2.setText("resultado(s).");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ortus/icones/alterar.png"))); // NOI18N
        jButton2.setText("Alterar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ortus/icones/close.png"))); // NOI18N
        jButton3.setText("Fechar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldFiltro)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFiltro))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFiltro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 52, 640, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        alterar();
    }//GEN-LAST:event_jButton2ActionPerformed

private void jButtonFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltroActionPerformed
// TODO add your handling code here:
    filtrarPesquisa();
}//GEN-LAST:event_jButtonFiltroActionPerformed

    private void jTableAssitenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAssitenciasMouseClicked
        // TODO add your handling code here:
        int num = -1;
        colorirLinhaDeAcordoComStatus(num);
    }//GEN-LAST:event_jTableAssitenciasMouseClicked

    private void jTableAssitenciasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableAssitenciasKeyReleased
        // TODO add your handling code here:
        int num = -1;
        colorirLinhaDeAcordoComStatus(num);
    }//GEN-LAST:event_jTableAssitenciasKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogPesquisaAssitencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogPesquisaAssitencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogPesquisaAssitencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogPesquisaAssitencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDialogPesquisaAssitencia dialog = new JDialogPesquisaAssitencia(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonFiltro;
    private javax.swing.JComboBox jComboBoxFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAssitencias;
    private javax.swing.JTextField jTextFieldFiltro;
    private javax.swing.JTextField jTextFieldResultado;
    // End of variables declaration//GEN-END:variables

    private void popularTabela() {
        AssistenciaDao aDao = new AssistenciaDao();
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[]{
                    "OSI", "Cliente", "Data Inicio", "Data Final", "Qtde Equipamentos", "Qtde Componentes", "Status"});
        //TransactionManager.commit();
        if (filtroDois != true) {
            assistencias = aDao.obterLista(filtro);
        }
        
        List<Assistencia> listaOrdenada = inverterLista(assistencias);

        if (listaOrdenada != null) {
            //int cont = 1;
            for (Assistencia astec : listaOrdenada) {
                //System.out.println(cont++);
                model.addRow(new Object[]{verificarSeENull(String.valueOf(astec.getAtendimento().getNumeroRA())), verificarSeENull(astec.getCliente().getNome()), astec.getDataInicio(), verificarSeENull(astec.getDataFim()), verificarSeENull(String.valueOf(astec.getEquipamentos().size())), verificarSeENull(String.valueOf(astec.getMoldeComponentes().size())), verificarSeENull(verificarStatus(astec))});

            }
            colorirLinhaDeAcordoComStatus(listaOrdenada.size()-1);
            jTableAssitencias.setModel(model);
            definirTamanhoColuna(jTableAssitencias);
            
        }
        
        jTextFieldResultado.setText(String.valueOf(assistencias.size()));
    }


    private void colorirLinhaDeAcordoComStatus(int num) {
        int linha = 0;
        if(num == -1){
            linha = jTableAssitencias.getSelectedRow();
        }else{
            linha = num;
        }        
        if (linha != -1) {
            Assistencia assistencia = inverterLista(assistencias).get(linha);
            if(assistencia.getAtendimento().getFinalizado() == true){
                jTableAssitencias.setSelectionBackground(Color.GREEN);
                jTableAssitencias.setSelectionForeground(Color.DARK_GRAY);
            }else{                
                jTableAssitencias.setSelectionBackground(Color.getHSBColor(14, 94, 73));
                jTableAssitencias.setSelectionForeground(Color.WHITE);
            }
           
        }
        
    }

    private void alterar() {
        int linha = jTableAssitencias.getSelectedRow();
        if (linha != -1) {
            Assistencia assistencia = inverterLista(assistencias).get(linha);
            HashSistema.hash.put("astec", assistencia);
            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para editar a assistência.");
            return;
        }
    }

    private void filtrarPesquisa() {
        if (jTextFieldFiltro.getText().isEmpty()) {
            filtro = "";
            popularTabela();
        } else {
            if (jComboBoxFiltro.getSelectedIndex() == 0) {
                pesquisarPorRA();
                filtro = "";
            } else if (jComboBoxFiltro.getSelectedIndex() == 1) {
                pesquisarPorNomeCliente();
                filtro = "";
            } else if (jComboBoxFiltro.getSelectedIndex() == 2) {
                pesquisarPorNumeroSerie();
                filtro = "";
            }
        }
    }

    private void pesquisarPorRA() {
        if (verificarSeEntradaENumero()) {
            filtro = "atendimento_id INNER JOIN  '" + jTextFieldFiltro.getText() + "'";
            popularTabela();
        }
    }

    private boolean verificarSeEntradaENumero() {
        try {
            Double.parseDouble(jTextFieldFiltro.getText());
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Informe um valor numérico para este filtro!");
            return false;
        }
    }

    private void pesquisarPorNomeCliente() {
        filtro = jTextFieldFiltro.getText().toUpperCase();
        ArrayList<Assistencia> novaLista = new ArrayList<Assistencia>();
        assistencias = new AssistenciaDao().obterLista();
        for (int i = 0; i < assistencias.size(); i++) {
            if (assistencias.get(i).getCliente().getNome().contains(filtro)) {
                novaLista.add(assistencias.get(i));
            }
        }
        assistencias = novaLista;
        filtroDois = true;

        novaLista = null;
        popularTabela();
        filtroDois = false;
    }

    private void pesquisarPorNumeroSerie() {
        filtro = jTextFieldFiltro.getText().toUpperCase();
        ArrayList<Assistencia> novaLista = new ArrayList<Assistencia>();
        assistencias = new AssistenciaDao().obterLista();
        for (int i = 0; i < assistencias.size(); i++) {
            for (int j = 0; j < assistencias.get(i).getEquipamentos().size(); j++) {
                if (assistencias.get(i).getEquipamentos().get(j).getNumeroSerie().contains(filtro)) {
                    novaLista.add(assistencias.get(i));
                }
            }
        }
        assistencias = novaLista;
        filtroDois = true;

        novaLista = null;
        popularTabela();
        filtroDois = false;
    }

    private String verificarStatus(Assistencia astec) {
        if (astec.getAtendimento().getFinalizado() != null) {
            if (astec.getAtendimento().getFinalizado().booleanValue() == true) {
                return "Finalizado";
            } else {
                return "Aberto";
            }
        } else {
            return "Aberto";
        }
    }

    private void colorirUltimaLinha(Assistencia get) {
        
            Assistencia assistencia = get;
            if(assistencia.getAtendimento().getFinalizado() == true){
                jTableAssitencias.setSelectionBackground(Color.GREEN);
                jTableAssitencias.setSelectionForeground(Color.DARK_GRAY);
            }else{                
                jTableAssitencias.setSelectionBackground(Color.getHSBColor(14, 94, 73));
                jTableAssitencias.setSelectionForeground(Color.WHITE);
            }
           
        
    }

    private List<Assistencia> inverterLista(List<Assistencia> assistencias) {
        List<Assistencia> listaInvertida = new ArrayList<Assistencia>();
        for (int i = assistencias.size()-1; i >=0 ; i--) {
            listaInvertida.add(assistencias.get(i));
        }
        return listaInvertida;
    }

    private String verificarSeENull(String campo) {
        if(campo == null || campo.isEmpty()){
            return "";
        }else{
            return campo;
        }
    }

    private void definirTamanhoColuna(JTable tabela) {
        tabela.getColumnModel().getColumn(0).setPreferredWidth(30);
        tabela.getColumnModel().getColumn(1).setPreferredWidth(250);
    }
    
}
